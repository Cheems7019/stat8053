Y <- dat$Y; Z <- dat$Z; D <- dat$D; X <- dat$X;
tsht.result <- TSHT(Y,D,Z,X)
tsht.result$ci
dmodzx <- lm(D~Z+X+0)
hat_D <- dmodz$fitted.values
dmodzx <- lm(D~Z+X+0)
hat_D <- dmodzx$fitted.values
hat_D <- cbind(hat_D,X)
UL.example <- PoSIK1(hat_D,Z,modelSZ = 1:floor((ncol(Z)-1)/2))
N.sim <- 10000
posi.result <- PoSIK1(hat_D,Z,verbose = 0,modelSZ = 1:floor((ncol(Z)-1)/2),Nsim=Nsim)
posi.result <- summary(posi.result)
Nsim=1000
posi.result <- PoSIK1(hat_D,Z,verbose = 0,modelSZ = 1:floor((ncol(Z)-1)/2),Nsim=Nsim)
posi.result <- summary(posi.result)
posi.result
posi.result[1,1]
posi.ci <- c(tsht.result$betaHat-posi.result[1,1]*sqrt(tsht.result$betaVarHat/n),tsht.result$betaHat+posi.result[1,1]*sqrt(tsht.result$betaVarHat/n))
posi.ci
tsht.ci
tsht.ci <- tsht.result$ci
tsht.ci
posi.ci
library(MASS)
data.generation <- function(n,beta,gamma0,tau,px=5){
pi.star <- c(rep(0,6),rep(tau*gamma0,2),-0.5,-1)
gamma.star <- rep(gamma0,10)
psi.star <- seq(from=0.5,by=0.1,length.out=px)
phi.star <- seq(from=1.1,by=0.1,length.out=px)
pz <- 10; p <- pz+px
ZXSigma <- outer(1:p,1:p,function(x,y){0.5^(abs(x-y))})
ZX <- mvrnorm(n,mu=rep(0,p),Sigma = ZXSigma)
Z <- ZX[,1:pz,drop=FALSE]; X <- ZX[,(pz+1):p]
epsilonSigma <- matrix(c(1,0.8,0.8,1),2,2)
epsilon = mvrnorm(n,rep(0,2),epsilonSigma)
D = Z %*% gamma.star + X %*% psi.star + epsilon[,1]
Y =  D * beta + Z %*% pi.star + X %*% phi.star + epsilon[,2]
return(list(Y=Y,Z=Z,D=D,X=X))
}
simu.single <- function(n,beta,gamma0,tau,px=5,Nsim.posi){
## Data generation
dat <- data.generation(n,beta,gamma0,tau,px)
Y <- dat$Y; Z <- dat$Z; D <- dat$D; X <- dat$X;
## TSHT-CI construction
tsht.result <- TSHT(Y,D,Z,X)
tsht.ci <- tsht.result$ci
## TSHT-POSI-CI construction
dmodzx <- lm(D~Z+X+0)
hat_D <- dmodzx$fitted.values
hat_D <- matrix(hat_D,ncol=1)
hat_D <- cbind(hat_D,X)
posi.result <- PoSIK1(hat_D,Z,verbose = 0,modelSZ = 1:floor((ncol(Z)-1)/2),Nsim=Nsim.posi)
posi.result <- summary(posi.result)
posi.ci <- c(tsht.result$betaHat-posi.result[1,1]*sqrt(tsht.result$betaVarHat/n),tsht.result$betaHat+posi.result[1,1]*sqrt(tsht.result$betaVarHat/n))
return(c(beta,tsht.ci,posi.ci))
}
simu <- function(n,beta,gamma0,tau,px=5,Nsim.posi,Nsim){
result.mat <- matrix(0,n,5)
for (i in 1:Nsim){
result.single <- simu.single(n,beta,gamma0,tau,px,Nsim.posi)
result.mat[i,] <- result.single
}
}
library(MASS)
data.generation <- function(n,beta,gamma0,tau,px=5){
pi.star <- c(rep(0,6),rep(tau*gamma0,2),-0.5,-1)
gamma.star <- rep(gamma0,10)
psi.star <- seq(from=0.5,by=0.1,length.out=px)
phi.star <- seq(from=1.1,by=0.1,length.out=px)
pz <- 10; p <- pz+px
ZXSigma <- outer(1:p,1:p,function(x,y){0.5^(abs(x-y))})
ZX <- mvrnorm(n,mu=rep(0,p),Sigma = ZXSigma)
Z <- ZX[,1:pz,drop=FALSE]; X <- ZX[,(pz+1):p]
epsilonSigma <- matrix(c(1,0.8,0.8,1),2,2)
epsilon = mvrnorm(n,rep(0,2),epsilonSigma)
D = Z %*% gamma.star + X %*% psi.star + epsilon[,1]
Y =  D * beta + Z %*% pi.star + X %*% phi.star + epsilon[,2]
return(list(Y=Y,Z=Z,D=D,X=X))
}
simu.single <- function(n,beta,gamma0,tau,px=5,Nsim.posi){
## Data generation
dat <- data.generation(n,beta,gamma0,tau,px)
Y <- dat$Y; Z <- dat$Z; D <- dat$D; X <- dat$X;
## TSHT-CI construction
tsht.result <- TSHT(Y,D,Z,X)
tsht.ci <- tsht.result$ci
## TSHT-POSI-CI construction
dmodzx <- lm(D~Z+X+0)
hat_D <- dmodzx$fitted.values
hat_D <- matrix(hat_D,ncol=1)
hat_D <- cbind(hat_D,X)
posi.result <- PoSIK1(hat_D,Z,verbose = 0,modelSZ = 1:floor((ncol(Z)-1)/2),Nsim=Nsim.posi)
posi.result <- summary(posi.result)
posi.ci <- c(tsht.result$betaHat-posi.result[1,1]*sqrt(tsht.result$betaVarHat/n),tsht.result$betaHat+posi.result[1,1]*sqrt(tsht.result$betaVarHat/n))
return(c(beta,tsht.ci,posi.ci))
}
simu <- function(n,beta,gamma0,tau,px=5,Nsim.posi,Nsim){
result.mat <- matrix(0,n,5)
for (i in 1:Nsim){
result.single <- simu.single(n,beta,gamma0,tau,px,Nsim.posi)
result.mat[i,] <- result.single
}
}
n = 1000; beta = 1; gamma0 = 0.5; tau = 0.4; px=10; Nsim.posi = 10000; Nsim=1000;
set.seed(0)
mat1 <- simu(n,beta,gamma0,tau,px=5,Nsim.posi,Nsim)
head(mat1)
library(MASS)
data.generation <- function(n,beta,gamma0,tau,px=5){
pi.star <- c(rep(0,6),rep(tau*gamma0,2),-0.5,-1)
gamma.star <- rep(gamma0,10)
psi.star <- seq(from=0.5,by=0.1,length.out=px)
phi.star <- seq(from=1.1,by=0.1,length.out=px)
pz <- 10; p <- pz+px
ZXSigma <- outer(1:p,1:p,function(x,y){0.5^(abs(x-y))})
ZX <- mvrnorm(n,mu=rep(0,p),Sigma = ZXSigma)
Z <- ZX[,1:pz,drop=FALSE]; X <- ZX[,(pz+1):p]
epsilonSigma <- matrix(c(1,0.8,0.8,1),2,2)
epsilon = mvrnorm(n,rep(0,2),epsilonSigma)
D = Z %*% gamma.star + X %*% psi.star + epsilon[,1]
Y =  D * beta + Z %*% pi.star + X %*% phi.star + epsilon[,2]
return(list(Y=Y,Z=Z,D=D,X=X))
}
simu.single <- function(n,beta,gamma0,tau,px=5,Nsim.posi){
## Data generation
dat <- data.generation(n,beta,gamma0,tau,px)
Y <- dat$Y; Z <- dat$Z; D <- dat$D; X <- dat$X;
## TSHT-CI construction
tsht.result <- TSHT(Y,D,Z,X)
tsht.ci <- tsht.result$ci
## TSHT-POSI-CI construction
dmodzx <- lm(D~Z+X+0)
hat_D <- dmodzx$fitted.values
hat_D <- matrix(hat_D,ncol=1)
hat_D <- cbind(hat_D,X)
posi.result <- PoSIK1(hat_D,Z,verbose = 0,modelSZ = 1:floor((ncol(Z)-1)/2),Nsim=Nsim.posi)
posi.result <- summary(posi.result)
posi.ci <- c(tsht.result$betaHat-posi.result[1,1]*sqrt(tsht.result$betaVarHat/n),tsht.result$betaHat+posi.result[1,1]*sqrt(tsht.result$betaVarHat/n))
return(c(beta,tsht.ci,posi.ci))
}
simu <- function(n,beta,gamma0,tau,px=5,Nsim.posi,Nsim){
result.mat <- matrix(0,n,5)
for (i in 1:Nsim){
result.single <- simu.single(n,beta,gamma0,tau,px,Nsim.posi)
result.mat[i,] <- result.single
}
return(result.mat)
}
summary.simu <- function(mat){
n <- nrow(mat)
cover.tsht <- sum((mat[,2]<mat[1,1])*(mat[,3]>mat[1,1]))/n
cover.posi <- sum((mat[,4]<mat[1,1])*(mat[,5]>mat[1,1]))/n
len.tsht <- mean(mat[,3]-mat[,2])
len.posi <- mean(mat[,5]-mat[,4])
}
n = 1000; beta = 1; gamma0 = 0.5; tau = 0.4; px=10; Nsim.posi = 10000; Nsim=10
set.seed(0)
mat1 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
mat1
simu <- function(n,beta,gamma0,tau,px=5,Nsim.posi,Nsim){
result.mat <- matrix(0,Nsim,5)
for (i in 1:Nsim){
result.single <- simu.single(n,beta,gamma0,tau,px,Nsim.posi)
result.mat[i,] <- result.single
}
return(result.mat)
}
n = 1000; beta = 1; gamma0 = 0.5; tau = 0.4; px=10; Nsim.posi = 10000; Nsim=10
set.seed(0)
mat1 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
head(mat1)
library(MASS)
data.generation <- function(n,beta,gamma0,tau,px){
pi.star <- c(rep(0,6),rep(tau*gamma0,2),-0.5,-1)
gamma.star <- rep(gamma0,10)
psi.star <- seq(from=0.5,by=0.1,length.out=px)
phi.star <- seq(from=1.1,by=0.1,length.out=px)
pz <- 10; p <- pz+px
ZXSigma <- outer(1:p,1:p,function(x,y){0.5^(abs(x-y))})
ZX <- mvrnorm(n,mu=rep(0,p),Sigma = ZXSigma)
Z <- ZX[,1:pz,drop=FALSE]; X <- ZX[,(pz+1):p]
epsilonSigma <- matrix(c(1,0.8,0.8,1),2,2)
epsilon = mvrnorm(n,rep(0,2),epsilonSigma)
D = Z %*% gamma.star + X %*% psi.star + epsilon[,1]
Y =  D * beta + Z %*% pi.star + X %*% phi.star + epsilon[,2]
return(list(Y=Y,Z=Z,D=D,X=X))
}
simu.single <- function(n,beta,gamma0,tau,px,Nsim.posi){
## Data generation
dat <- data.generation(n,beta,gamma0,tau,px)
Y <- dat$Y; Z <- dat$Z; D <- dat$D; X <- dat$X;
## TSHT-CI construction
tsht.result <- TSHT(Y,D,Z,X)
tsht.ci <- tsht.result$ci
## TSHT-POSI-CI construction
dmodzx <- lm(D~Z+X+0)
hat_D <- dmodzx$fitted.values
hat_D <- matrix(hat_D,ncol=1)
hat_D <- cbind(hat_D,X)
posi.result <- PoSIK1(hat_D,Z,verbose = 0,modelSZ = 1:floor((ncol(Z)-1)/2),Nsim=Nsim.posi)
posi.result <- summary(posi.result)
posi.ci <- c(tsht.result$betaHat-posi.result[1,1]*sqrt(tsht.result$betaVarHat/n),tsht.result$betaHat+posi.result[1,1]*sqrt(tsht.result$betaVarHat/n))
return(c(beta,tsht.ci,posi.ci))
}
simu <- function(n,beta,gamma0,tau,px,Nsim.posi,Nsim){
result.mat <- matrix(0,Nsim,5)
for (i in 1:Nsim){
result.single <- simu.single(n,beta,gamma0,tau,px,Nsim.posi)
result.mat[i,] <- result.single
}
return(result.mat)
}
summary.simu <- function(mat){
n <- nrow(mat)
cover.tsht <- sum((mat[,2]<mat[1,1])*(mat[,3]>mat[1,1]))/n
cover.posi <- sum((mat[,4]<mat[1,1])*(mat[,5]>mat[1,1]))/n
len.tsht <- mean(mat[,3]-mat[,2])
len.posi <- mean(mat[,5]-mat[,4])
}
## Setting 1
n = 1000; beta = 1; gamma0 = 0.5; tau = 0.4; px=10; Nsim.posi = 10000; Nsim=1000
set.seed(0)
mat1 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
summary.simu(mat1)
summary.simu <- function(mat){
n <- nrow(mat)
cover.tsht <- sum((mat[,2]<mat[1,1])*(mat[,3]>mat[1,1]))/n
cover.posi <- sum((mat[,4]<mat[1,1])*(mat[,5]>mat[1,1]))/n
len.tsht <- mean(mat[,3]-mat[,2])
len.posi <- mean(mat[,5]-mat[,4])
return(c(cover.tsht,cover.posi,len.tsht,len.posi))
}
summary.simu(mat1)
help("write.csv")
write.csv(mat1,"./mat1.csv")
write.csv(mat1,"./simu_results/mat1.csv")
library(MASS)
data.generation <- function(n,beta,gamma0,tau,px){
pi.star <- c(rep(0,6),rep(tau*gamma0,2),-0.5,-1)
gamma.star <- rep(gamma0,10)
psi.star <- seq(from=0.5,by=0.1,length.out=px)
phi.star <- seq(from=1.1,by=0.1,length.out=px)
pz <- 10; p <- pz+px
ZXSigma <- outer(1:p,1:p,function(x,y){0.5^(abs(x-y))})
ZX <- mvrnorm(n,mu=rep(0,p),Sigma = ZXSigma)
Z <- ZX[,1:pz,drop=FALSE]; X <- ZX[,(pz+1):p]
epsilonSigma <- matrix(c(1,0.8,0.8,1),2,2)
epsilon = mvrnorm(n,rep(0,2),epsilonSigma)
D = Z %*% gamma.star + X %*% psi.star + epsilon[,1]
Y =  D * beta + Z %*% pi.star + X %*% phi.star + epsilon[,2]
return(list(Y=Y,Z=Z,D=D,X=X))
}
simu.single <- function(n,beta,gamma0,tau,px,Nsim.posi){
## Data generation
dat <- data.generation(n,beta,gamma0,tau,px)
Y <- dat$Y; Z <- dat$Z; D <- dat$D; X <- dat$X;
## TSHT-CI construction
tsht.result <- TSHT(Y,D,Z,X)
tsht.ci <- tsht.result$ci
## TSHT-POSI-CI construction
dmodzx <- lm(D~Z+X+0)
hat_D <- dmodzx$fitted.values
hat_D <- matrix(hat_D,ncol=1)
hat_D <- cbind(hat_D,X)
posi.result <- PoSIK1(hat_D,Z,verbose = 0,modelSZ = 1:floor((ncol(Z)-1)/2),Nsim=Nsim.posi)
posi.result <- summary(posi.result)
posi.ci <- c(tsht.result$betaHat-posi.result[1,1]*sqrt(tsht.result$betaVarHat/n),tsht.result$betaHat+posi.result[1,1]*sqrt(tsht.result$betaVarHat/n))
return(c(beta,tsht.ci,posi.ci))
}
simu <- function(n,beta,gamma0,tau,px,Nsim.posi,Nsim){
result.mat <- matrix(0,Nsim,5)
for (i in 1:Nsim){
result.single <- simu.single(n,beta,gamma0,tau,px,Nsim.posi)
result.mat[i,] <- result.single
}
return(result.mat)
}
summary.simu <- function(mat){
n <- nrow(mat)
cover.tsht <- sum((mat[,2]<mat[1,1])*(mat[,3]>mat[1,1]))/n
cover.posi <- sum((mat[,4]<mat[1,1])*(mat[,5]>mat[1,1]))/n
len.tsht <- mean(mat[,3]-mat[,2])
len.posi <- mean(mat[,5]-mat[,4])
return(c(cover.tsht,cover.posi,len.tsht,len.posi))
}
## Setting 1
n = 500; beta = 1; gamma0 = 0.5; tau = 0.4; px=10; Nsim.posi = 10000; Nsim=1000
set.seed(0)
mat1 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
write.csv(mat1,"./simu_results/mat1.csv")
## Setting 2
n = 1000; beta = 1; gamma0 = 0.5; tau = 0.4; px=10; Nsim.posi = 10000; Nsim=1000
set.seed(0)
mat2 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
write.csv(mat2,"./simu_results/mat2.csv")
## Setting 3
n = 1500; beta = 1; gamma0 = 0.5; tau = 0.4; px=10; Nsim.posi = 10000; Nsim=1000
set.seed(0)
mat3 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
write.csv(mat3,"./simu_results/mat3.csv")
## Setting 4
n = 500; beta = 1; gamma0 = 0.5; tau = 0.2; px=10; Nsim.posi = 10000; Nsim=1000
set.seed(0)
mat4 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
write.csv(mat4,"./simu_results/mat4.csv")
## Setting 5
n = 1000; beta = 1; gamma0 = 0.5; tau = 0.2; px=10; Nsim.posi = 10000; Nsim=1000
set.seed(0)
mat5 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
write.csv(mat5,"./simu_results/mat5.csv")
## Setting 6
n = 1500; beta = 1; gamma0 = 0.5; tau = 0.2; px=10; Nsim.posi = 10000; Nsim=1000
set.seed(0)
mat6 <- simu(n,beta,gamma0,tau,px,Nsim.posi,Nsim)
write.csv(mat6,"./simu_results/mat6.csv")
simu <- function(n,beta,gamma0,tau,px,Nsim.posi,Nsim){
result.mat <- matrix(0,Nsim,5)
for (i in 1:Nsim){
result.single <- simu.single(n,beta,gamma0,tau,px,Nsim.posi)
result.mat[i,] <- result.single
}
return(result.mat)
}
## Summary of Results
results <- rbind(summary.simu(mat1),summary.simu(mat2),summary.simu(mat3),summary.simu(mat4),summary.simu(mat5),summary.simu(mat6))
results
library(wooldridge)
dat <- card[,c(33,4,6,7,9,10,11,31,22,29,32,30)]
dat <- na.omit(dat)
dat <- apply(dat,2,as.numeric)
dat <- scale(dat)
help(card)
dat <- card[,c(33,4,6,7,9,10,11,31,22,29,32,30)]
dat <- na.omit(dat)
dat <- apply(dat,2,as.numeric)
dat <- scale(dat)
head(dat)
dat <- card[,c(33,4,6,7,9,10,11,31,22,29,32,30)]
head9dat
head(dat)
dat <- card[,c(33,4,6,7,9,10,11,31,22,29,32,30)]
dat <- na.omit(dat)
dat <- apply(dat,2,as.numeric)
dat <- scale(dat)
## Outcome variable: lwage
Y <- dat[,1,drop=FALSE]
## Treatment variable: educ
D <- dat[,2,drop=FALSE]
## Potential IV set: fatheduc, motheduc, momdad14, sinmom14, step14,libcrd14
Z <- dat[,3:8]
## Variables used as covariates: IQ, black, exper, married
X <- dat[,9:12]
hist(Y)
dat <- card[,c(33,4,6,7,9,10,11,31,22,29,32,30)]
hist(dat[,1])
head(dat)
dat <- card[,c(33,4,6,7,9,10,11,31,22,29,32,30)]
dat <- na.omit(dat)
nrow(dat)
library(wooldridge)
library(ggplot2)
head(dat)
ggplot(dat,aes(x=educ,y=lwage))+geom_point()
ggplot(dat,aes(x=educ,y=lwage))+geom_point(size=1)
ggplot(dat,aes(x=educ,y=lwage))+geom_point(size=0.5)
ggplot(dat,aes(x=educ))+geom_histogram()
ggplot(dat,aes(x=lwage))+geom_histogram()
ggplot(dat,aes(x=lwage))+geom_histogram(color="black", fill="white")
ggplot(dat,aes(x=educ))+geom_histogram(color="black", fill="white")
help("geom_histogram")
unique(dat$educ)
ggplot(dat,aes(x=educ))+geom_histogram(binwidth=0.9,color="black", fill="white")
ggplot(dat,aes(x=educ))+geom_histogram(binwidth=0.8,color="black", fill="white")
ggplot(dat,aes(x=educ))+geom_histogram(binwidth=0.5,color="black", fill="white")
ggplot(dat,aes(x=educ))+geom_histogram(binwidth=0.5,break=7:13,color="black", fill="white")
ggplot(dat,aes(x=educ))+geom_histogram(binwidth=0.5,breaks=7:13,color="black", fill="white")
ggplot(dat,aes(x=educ))+geom_histogram(binwidth=0.5,breaks=seq(7,13,by=0.5),color="black", fill="white")
table(dat$educ)
ggplot(dat,aes(x=lwage))+geom_histogram(color="black", fill="white")
ggplot(dat,aes(x=lwage))+geom_histogram(color="black", fill="white")
ggplot(dat,aes(x=educ,y=lwage))+geom_point(size=0.5)
card$wage
jist(card$wage)
hist(card$wage)
help(card)
dat$IQ
table(dat$fatheduc)
table(dat$motheduc)
table(dat$educ)
dat$momdad14
sum(dat$momdad14)/nrow(dat)
sum(dat$sinmom14)/nrow(dat)
sum(dat$momdad14)/nrow(dat)
sum(dat$sinmom14)/nrow(dat)
sum(dat$step14)/nrow(dat)
dat$libcrd14
sum(dat$momdad14)/nrow(dat)
sum(dat$sinmom14)/nrow(dat)
sum(dat$step14)/nrow(dat)
sum(dat$libcrd14)/nrow(dat)
head(dat)
ggplot(dat,aes(x=IQ))+geom_histogram(color="black", fill="white")
ggplot(dat,aes(x=IQ))+geom_histogram(color="black", fill="white")
sum(dat$momdad14)/nrow(dat)
sum(dat$sinmom14)/nrow(dat)
sum(dat$step14)/nrow(dat)
sum(dat$libcrd14)/nrow(dat)
sum(dat$black)/nrow(dat)
sum(dat$married)/nrow(dat)
dat$married
results
head(X)
head(dat)
ggplot(dat,aes(x=exper))+geom_histogram(color="black", fill="white")
ggplot(dat,aes(x=exper))+geom_histogram(color="black", fill="white")
dat <- apply(dat,2,as.numeric)
dat <- scale(dat)
## Outcome variable: lwage
Y <- dat[,1,drop=FALSE]
## Treatment variable: educ
D <- dat[,2,drop=FALSE]
## Potential IV set: fatheduc, motheduc, momdad14, sinmom14, step14,libcrd14
Z <- dat[,3:8]
## Variables used as covariates: IQ, black, exper, married
X <- dat[,9:12]
## TSHT confidence interval
tsht.result <- TSHT(Y,D,Z,X)
tsht.result$ci
## POSI
set.seed(1234)
dmodz <- lm(D~Z+0)
hat_D <- dmodz$fitted.values
hat_D <- matrix(hat_D,ncol=1)
hat_D <- cbind(hat_D,X)
posi <- PoSIK1(hat_D,Z,modelSZ = 1:floor((ncol(Z)-1)/2),verbose = 0,Nsim = 100000)
k <- summary(posi)[1,1]
posi.result <- c(tsht.result$betaHat-k*sqrt(tsht.result$betaVarHat/nrow(Y)),tsht.result$betaHat+k*sqrt(tsht.result$betaVarHat/nrow(Y)))
posi.result
knitr::opts_chunk$set(echo = TRUE)
library(wooldridge)
library(ggplot2)
dat <- card[,c(33,4,6,7,9,10,11,31,22,29,32,30)]
dat <- na.omit(dat)
nrow(dat)
ggplot(dat,aes(x=educ,y=lwage))+geom_point(size=0.5)
ggplot(dat,aes(x=lwage))+geom_histogram(color="black", fill="white")
table(dat$educ)
table(dat$fatheduc)
table(dat$motheduc)
sum(dat$momdad14)/nrow(dat)
sum(dat$sinmom14)/nrow(dat)
sum(dat$step14)/nrow(dat)
sum(dat$libcrd14)/nrow(dat)
sum(dat$black)/nrow(dat)
sum(dat$married)/nrow(dat)
ggplot(dat,aes(x=IQ))+geom_histogram(color="black", fill="white")
ggplot(dat,aes(x=exper))+geom_histogram(color="black", fill="white")
dat <- apply(dat,2,as.numeric)
dat <- scale(dat)
## Outcome variable: lwage
Y <- dat[,1,drop=FALSE]
## Treatment variable: educ
D <- dat[,2,drop=FALSE]
## Potential IV set: fatheduc, motheduc, momdad14, sinmom14, step14,libcrd14
Z <- dat[,3:8]
## Variables used as covariates: IQ, black, exper, married
X <- dat[,9:12]
## TSHT confidence interval
tsht.result <- TSHT(Y,D,Z,X)
tsht.result$ci
## POSI
set.seed(1234)
dmodz <- lm(D~Z+0)
hat_D <- dmodz$fitted.values
hat_D <- matrix(hat_D,ncol=1)
hat_D <- cbind(hat_D,X)
posi <- PoSIK1(hat_D,Z,modelSZ = 1:floor((ncol(Z)-1)/2),verbose = 0,Nsim = 100000)
k <- summary(posi)[1,1]
posi.result <- c(tsht.result$betaHat-k*sqrt(tsht.result$betaVarHat/nrow(Y)),tsht.result$betaHat+k*sqrt(tsht.result$betaVarHat/nrow(Y)))
posi.result
tsht.result
dmodz
summary(dmodz)
head(Z)
head(dat)
dat <- card[,c(33,4,6,7,31,22,29,32,30,9,10,11)]
dat <- na.omit(dat)
head(dat)
dat <- apply(dat,2,as.numeric)
dat <- scale(dat)
## Outcome variable: lwage
Y <- dat[,1,drop=FALSE]
## Treatment variable: educ
D <- dat[,2,drop=FALSE]
## Potential IV set: fatheduc, motheduc, momdad14, sinmom14, step14,libcrd14
Z <- dat[,3:5]
## Variables used as covariates: IQ, black, exper, married
X <- dat[,6:12]
## TSHT confidence interval
tsht.result <- TSHT(Y,D,Z,X)
tsht.result$ci
## POSI
set.seed(1234)
dmodz <- lm(D~Z+0)
hat_D <- dmodz$fitted.values
hat_D <- matrix(hat_D,ncol=1)
hat_D <- cbind(hat_D,X)
posi <- PoSIK1(hat_D,Z,modelSZ = 1:floor((ncol(Z)-1)/2),verbose = 0,Nsim = 100000)
k <- summary(posi)[1,1]
posi.result <- c(tsht.result$betaHat-k*sqrt(tsht.result$betaVarHat/nrow(Y)),tsht.result$betaHat+k*sqrt(tsht.result$betaVarHat/nrow(Y)))
posi.result
tsht.result
